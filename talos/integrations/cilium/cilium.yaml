# This manifest was generated by automation. DO NOT EDIT.
apiVersion: v1
kind: Namespace
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-secrets
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-ingress-secrets
  namespace: cilium-secrets
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator-ingress-secrets
  namespace: cilium-secrets
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - update
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumbgpnodeconfigs
  - ciliumbgpadvertisements
  - ciliumbgppeerconfigs
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  - ciliumcidrgroups
  - ciliuml2announcementpolicies
  - ciliumpodippools
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  - ciliuml2announcementpolicies/status
  - ciliumbgpnodeconfigs/status
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - delete
  - patch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumbgppeerconfigs
  - ciliumbgpadvertisements
  - ciliumbgpnodeconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumbgpclusterconfigs.cilium.io
  - ciliumbgppeerconfigs.cilium.io
  - ciliumbgpadvertisements.cilium.io
  - ciliumbgpnodeconfigs.cilium.io
  - ciliumbgpnodeconfigoverrides.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  - ciliumcidrgroups.cilium.io
  - ciliuml2announcementpolicies.cilium.io
  - ciliumpodippools.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumpodippools
  - ciliumbgpclusterconfigs
  - ciliumbgpnodeconfigoverrides
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumpodippools
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  - ingressclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator-ingress-secrets
  namespace: cilium-secrets
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-operator-ingress-secrets
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-secrets
  namespace: cilium-secrets
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-ingress-secrets
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  annotate-k8s-node: "true"
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-acceleration: disabled
  bpf-lb-algorithm: maglev
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: hybrid
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "0"
  cluster-name: talos-default
  cni-exclusive: "false"
  cni-log-file: /var/run/cilium/cilium-cni.log
  controller-group-metrics: write-cni-file sync-host-ips sync-lb-maps-with-k8s-services
  custom-cni-conf: "false"
  debug: "false"
  dnsproxy-enable-transparent-mode: "true"
  egress-gateway-reconciliation-trigger-interval: 1s
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "false"
  enable-bpf-masquerade: "true"
  enable-cilium-endpoint-slice: "true"
  enable-endpoint-health-checking: "true"
  enable-envoy-config: "true"
  enable-health-check-loadbalancer-ip: "false"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "true"
  enable-ingress-controller: "true"
  enable-ingress-proxy-protocol: "false"
  enable-ingress-secrets-sync: "true"
  enable-ipv4: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-networkpolicy: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "false"
  enable-masquerade-to-route-source: "false"
  enable-metrics: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  enforce-ingress-https: "true"
  external-envoy-proxy: "false"
  hubble-disable-tls: "false"
  hubble-export-file-max-backups: "5"
  hubble-export-file-max-size-mb: "10"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA, drop tcp flow http icmp port-distribution
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  ingress-default-lb-mode: dedicated
  ingress-lb-annotation-prefixes: service.beta.kubernetes.io service.kubernetes.io
    cloud.google.com
  ingress-secrets-namespace: cilium-secrets
  ingress-shared-lb-service-name: cilium-ingress
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipam-cilium-node-update-rate: 15s
  ipv4-native-routing-cidr: 10.0.0.0/8
  k8s-client-burst: "20"
  k8s-client-qps: "10"
  kube-proxy-replacement: "true"
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  max-connected-clusters: "255"
  mesh-auth-enabled: "true"
  mesh-auth-gc-interval: 5m0s
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  operator-prometheus-serve-addr: :9963
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  prometheus-serve-addr: :9962
  proxy-connect-timeout: "2"
  proxy-max-connection-duration-seconds: "0"
  proxy-max-requests-per-connection: "0"
  proxy-prometheus-port: "9964"
  remove-cilium-node-taints: "true"
  routing-mode: tunnel
  service-no-backend-response: reject
  set-cilium-is-up-condition: "true"
  set-cilium-node-taints: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel-protocol: vxlan
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: talos-default\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ngops: true\ngops-port: \"9893\"\nmetrics-listen-address: \":9966\"\ndial-timeout:
    \nretry-timeout: \nsort-buffer-len-max: \nsort-buffer-drain-timeout: \ntls-hubble-client-cert-file:
    /var/lib/hubble-relay/tls/client.crt\ntls-hubble-client-key-file: /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files:
    /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls: true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n\n        # Liveness probe\n        location
    /healthz {\n            access_log off;\n            add_header Content-Type text/plain;\n
    \           return 200 'ok';\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU55RVN1b3BrdzhoOTh1cDJRa3hVVVl3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURVd056QXpOVFF5TkZvWERUSTNNRFV3TnpBegpOVFF5TkZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUEyNkYzNzc3N05vRUlCVCtaNWJaaEJVZkUrWllINVNJYUNDZHFjQy9COGo0dmU5WDgKZE4vSmtIVElTSTl3Mmh1ZkNhU3M4dmJPR2laNTdKcEM4WlVlNTk4c3oxbVF3UHhwcGppNEhqcjMvYTR2d2tRRgpYZnkwM3haN2tUb29FcDJMcUFQWlhjWjExZXZsdnBaL0FnR2cxWkdyV1hGUUx4TTZLNE40WENMamZCVm5JK3dFCnVEOUora0U1c2F1MXFSTTBIWDBpMFdVUlRVUC8xVjR1VkZxMVVQV2JpcUlrOUFWdkJXQmFPTWFybnpybC9TSzYKb3BGKzFRREZPRFQ2ZElJWncxbS9peDFpMmFYV3dWTW4vcGFTempNS3EyNmx4enZLei9yS0tXUWhxN0ZXNElDeAp2dlRqb0pZOXRxK3NCSTI1dVNrVmdObkwzOTkreVcvbUl5dmp1d0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGTGdYU0xCTzhaTk5lcXV2aDdneTBNMThaaG0yTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRREFnaHNRQ2ppWUhINXhUT05oeWpSZWROVXBPcFBuNXdWQ0h1bm9nMFNhTVFyQkxvWjdUK1VKCkpaM1FWL0plMy9WM1ExdjVkbnQ0U2UxUkVXMFpqYUtRR0Y2NEZmUWZuSCszSVhibUdSOE9QOEFiWWlOTUVJVk4Kd2V3R05sR240NVkwd1NvMnVYL05qTnZNWU93TE5DdE4wbThZSlVadHFxNHdCUFZhS3N4TExpbFpMQkpEYVg2RQppREc4TTdoTEE0YnFEbGFjejF5a3RuWkNtUGFvd0c1SVo5ZXhRTE92VXlDb1pENkdWb3NyK3FkQmdGNmkwTzJFCjk4Nlozc29XT2ppbWtmVXpPTkdzbnNhN01rbjBXMlhtZHhUN0d4Mi9KVUs1RDNCOFBaajF3M2xVL3hYZ3Rlb1oKUlc3a2JEQ3JKQS9NYTZRbXV0SG4yaHFrL1h0UW14YTQKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBMjZGMzc3NzdOb0VJQlQrWjViWmhCVWZFK1pZSDVTSWFDQ2RxY0MvQjhqNHZlOVg4CmROL0prSFRJU0k5dzJodWZDYVNzOHZiT0dpWjU3SnBDOFpVZTU5OHN6MW1Rd1B4cHBqaTRIanIzL2E0dndrUUYKWGZ5MDN4WjdrVG9vRXAyTHFBUFpYY1oxMWV2bHZwWi9BZ0dnMVpHcldYRlFMeE02SzRONFhDTGpmQlZuSSt3RQp1RDlKK2tFNXNhdTFxUk0wSFgwaTBXVVJUVVAvMVY0dVZGcTFVUFdiaXFJazlBVnZCV0JhT01hcm56cmwvU0s2Cm9wRisxUURGT0RUNmRJSVp3MW0vaXgxaTJhWFd3Vk1uL3BhU3pqTUtxMjZseHp2S3ovcktLV1FocTdGVzRJQ3gKdnZUam9KWTl0cStzQkkyNXVTa1ZnTm5MMzk5K3lXL21JeXZqdXdJREFRQUJBb0lCQUJoSlY2amtOb1ZGYVd5agpKdEozQTIyQkRUQUlQaUZCVHgyZHRqQm5wNHV4QXJFdjdYWERGVmZyQWdhOERkK2dkRXF0c2c0LzZuU0wwcW11Ck9UN2JuWXBJYkgwVlMyTjd4ZmNDaUtHWEpic2dtdGxoaWpKbGNsN0U3cThWZmo3b3V2dStTVGdNYlJWVnU1Y0MKcjFLNmVWMkVlUzB2MFkwVEZEaWhsaHFpSlFPZ2Fjc2FSMFE2MmQ0eTI3c2ppaFF5QXlocU0yd3NSY2JiNkVFWQp5dDlWV1BQYWxoSy9ZL3A3dXJ0RXBibFpVWWthTzdVSmI5eVlhaExCWmNJOFdReGUvN0NHaG1LNTRRWkRpZExYCkk3a0NTL3lQZS9GZ0lHMzBWem5ZNjJLMUw0cGxPYTJNZlQwSEV2YStjbmpOdkhURVlHRXFXaE5raVFmNDNCWmgKcU83eDNkRUNnWUVBNWdIaHVhUFIrZjdML0ZwVDZOaElLTEQrWGkwTnN1ekw0OUc3M0h6V2N4NUVwd2tNWWRlegp5OWlnWkpoRmZSdk13aVcxK3pZWjNTS3ZEYlVja0tYWmVsOEV4L1J5dCtoR1dJQ20wNFlvNGFQaXJ1VnBWQkN3CmNmNndXNUsxQUFuUlRldVpsTTNabUVmV1pOc01CakZFcTFDVFdFUHdWVjA3UVZpdklMN0hvak1DZ1lFQTlITmsKSEpMK0FBRTV3VDZrS2psakd5bmxIRHdTb01oNkhuT1R4Rk5ic2dlY2J4SnZzUWRZbjhpZ0ljaUd1MWJTcm51QgpFQ3pvYjVtS0x1eGxNeUpYZzYyNnh0M1dUWW5pNWlGRlJHUnZFZVBiK3ZQbnkxNk8xblkzeGEyRTZNWWdkeEtSCjRhWDFtbGIzK0lrYzM3U0Y4NHJjRUF4MXVTK1lyOGRnOVdtcGdGa0NnWUVBek1tYUg3NXpZMEh3ZjBReGQ1eXkKU3NDa0NsZlUzWjBtUURacUxIdGVPT3NYTngzQVQ1Rk5QVThvSjhqSC9nZDFmTnMwdDNISS8zSTFLR0E4Q2JJUQorM3FFZUQvMnNEWDRCQzZ2MnArVjRLa1pXSjFiOVlSU2hYeTlxeHJwV3hwaXFCMEFCbFJ0eTc4U2JZUDJwY0RTCklqSkFycEwyOWhwbmV0d3FPVjZEd3E4Q2dZQUxWT1lKSlE4OU5ORldrZTdPUGtiSDFaTlhVYm1UVm5mQ3ZaelYKOXY5REszTW0rdlhPZ1Fhc3NZSXF6cjdnSkZBejRtbkROREc2S3FYck11NG1CcXVENFNQTllDODAvUFZWc2FraQpXSDJGbU1oenc2YTFHTGNLWGdTTDExVlg3UWRJUGNZaGJhNEs3NGtqTGtmMlhzbnUxanNKUzJxUm9SRTA1TXNyCjFUQVVVUUtCZ1FDaDdEclNwNmlHWm5FOUNXTkZISjFHWmZyVzA1dndBQVVPTzI1UFZGQU50VGFYZUFHeXQ3OS8KWFU3SmRvbW51UzVkLys1ODlUMnRQbUx1d3cxOHJBV081SUZuWnh4UEpGeXkrRU1OYnV3bnp4ZDVQNFhEMjdtNAp3N2JtRXFaUEZBemU1b3NSMXRwL21pZ0Y2SjFiZzArWWxiY0ZvN1k4K2lrTnlpM0JIdms4V2c9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU55RVN1b3BrdzhoOTh1cDJRa3hVVVl3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURVd056QXpOVFF5TkZvWERUSTNNRFV3TnpBegpOVFF5TkZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUEyNkYzNzc3N05vRUlCVCtaNWJaaEJVZkUrWllINVNJYUNDZHFjQy9COGo0dmU5WDgKZE4vSmtIVElTSTl3Mmh1ZkNhU3M4dmJPR2laNTdKcEM4WlVlNTk4c3oxbVF3UHhwcGppNEhqcjMvYTR2d2tRRgpYZnkwM3haN2tUb29FcDJMcUFQWlhjWjExZXZsdnBaL0FnR2cxWkdyV1hGUUx4TTZLNE40WENMamZCVm5JK3dFCnVEOUora0U1c2F1MXFSTTBIWDBpMFdVUlRVUC8xVjR1VkZxMVVQV2JpcUlrOUFWdkJXQmFPTWFybnpybC9TSzYKb3BGKzFRREZPRFQ2ZElJWncxbS9peDFpMmFYV3dWTW4vcGFTempNS3EyNmx4enZLei9yS0tXUWhxN0ZXNElDeAp2dlRqb0pZOXRxK3NCSTI1dVNrVmdObkwzOTkreVcvbUl5dmp1d0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGTGdYU0xCTzhaTk5lcXV2aDdneTBNMThaaG0yTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRREFnaHNRQ2ppWUhINXhUT05oeWpSZWROVXBPcFBuNXdWQ0h1bm9nMFNhTVFyQkxvWjdUK1VKCkpaM1FWL0plMy9WM1ExdjVkbnQ0U2UxUkVXMFpqYUtRR0Y2NEZmUWZuSCszSVhibUdSOE9QOEFiWWlOTUVJVk4Kd2V3R05sR240NVkwd1NvMnVYL05qTnZNWU93TE5DdE4wbThZSlVadHFxNHdCUFZhS3N4TExpbFpMQkpEYVg2RQppREc4TTdoTEE0YnFEbGFjejF5a3RuWkNtUGFvd0c1SVo5ZXhRTE92VXlDb1pENkdWb3NyK3FkQmdGNmkwTzJFCjk4Nlozc29XT2ppbWtmVXpPTkdzbnNhN01rbjBXMlhtZHhUN0d4Mi9KVUs1RDNCOFBaajF3M2xVL3hYZ3Rlb1oKUlc3a2JEQ3JKQS9NYTZRbXV0SG4yaHFrL1h0UW14YTQKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQU13S2dHQmdtQUFURFFMbHIvSXdlWnd3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURVd056QXpOVFF5TkZvWERUSTNNRFV3TnpBegpOVFF5TkZvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXVqaEdtbG1zdU9kNkpzeTZIR3JRTmZraUNKeGsKakh0SEVCSjEwUTR6VnhWWlduNHVXbWZwSFZKVmVLVHU4QVB2K0J6TGVEMFh1UG9sZFJKa2h4M0RnOVJRWFhCTwp5WnFHMU1kUlF3bkphNnIrQ2prcVo3aG9zcmtqVlMwRWk3T0N4OVlzaDZGaFpJM0JJbzNydkdIbExnaTFoT3VKCnQvM1VLZkFDeFlYZk91WFdQaUVGa2Zpczc3SWJEa3hkSS9tQlZFdCtBT0VGKzBEZWdhbWQ5VzFVeTRrRWM3cDEKSFo5S0lRMFlQL0MrcHVlaFUzNFJHTmxDNmhFVGNSTkpCNXRTZFJNVzZhQkk5eUVLdVVRTVdYajFzZ25zVWwwaAp1dlhsTjZURW5ySWRmR1Y0ZlU2OHI0aUZaT3VNemRScXFHL3ArcVJ6NldLaXpMdnp3S3hrOHJYYUl3SURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCUzRGMGl3VHZHVFRYcXJyNGU0TXRETgpmR1ladGpBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBRmgzZ3RFMFoyYTZoQmZDTFFiS2pVNnFPMGtENmd4Sy9jM1BtSUhHOEoxcDFFcE4KanVvMklXM2NLdStIbEh5Q0d5ZnhZNVpJSk9FMS9XREZIWUVlYTdDNURDMkN6TUgwbUxXa25RTjJWK09jSlJiVQo2NlNaSGVEdlNXRUlVZzdTVGFhNkJEQ1Y3K25LWktCU054eU82RlBpdENPeXUyUGY4ZnhYZHZXOGUrSlhHUFoxCmtWUVFEaGh5WWxyUGd6UjJzZzZBenJCb0pFamxCRERiZHlZaVU1d09TNERTMTBWbkwxZmMzUGU5WmVNVHJQa3UKaWVNMHFzYlllOHl2ekR3NTZGZHFOcFM1M2RuRnNiQmdxb0c5bEIxeTU0b1RKdXJEK2o1bGoxWGRMR2R3MEJBTQpOMVY0MHVCY1FaTWh6cERxVnA2Q2VDOVpTMUJBTHk1TmpEbFRwVUk9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBdWpoR21sbXN1T2Q2SnN5NkhHclFOZmtpQ0p4a2pIdEhFQkoxMFE0elZ4VlpXbjR1CldtZnBIVkpWZUtUdThBUHYrQnpMZUQwWHVQb2xkUkpraHgzRGc5UlFYWEJPeVpxRzFNZFJRd25KYTZyK0Nqa3EKWjdob3Nya2pWUzBFaTdPQ3g5WXNoNkZoWkkzQklvM3J2R0hsTGdpMWhPdUp0LzNVS2ZBQ3hZWGZPdVhXUGlFRgprZmlzNzdJYkRreGRJL21CVkV0K0FPRUYrMERlZ2FtZDlXMVV5NGtFYzdwMUhaOUtJUTBZUC9DK3B1ZWhVMzRSCkdObEM2aEVUY1JOSkI1dFNkUk1XNmFCSTl5RUt1VVFNV1hqMXNnbnNVbDBodXZYbE42VEVucklkZkdWNGZVNjgKcjRpRlpPdU16ZFJxcUcvcCtxUno2V0tpekx2endLeGs4clhhSXdJREFRQUJBb0lCQUErbWt5aDl5T3B4YWU3QQozaE50VnJweWljMjNkeXZuWUgyVlQ1bVdXL0pCdFJUSjdoTmpFRkNLanV4bzBEd1QyS005cUV3ZXRsT3hrbHhZCmcySm51ZnJtYVNxeE9hM3Y4czBIUTJraTlXNjdIRWEzcnp5d1h2eEdXeFhaaHJ4SEJnTE5tVWg4NDdhVHcxdW8KR2R2blRsK2tFNzFzSGxMOFhreDRBNE9lVUxpZVc3Wm9RUDRlLzNicUI1dGpTL0lJNTZvNDk4RHFuUG1ORFRHdApHeDBlbWI5Zk9FSk1sNmpLMFp1VTVzQStoMEJvTDRjR3hBQk1vaUk3WW95czlCTkc5ckpTRmowMjViVlpFYmNVCkw4UjBWYWRNc1MzNk92ZTZsTFJNNVBpSnFaVE5wN0gvWkNlYUdtNC9yY2VWYXh0TENGWktqdTk1a09nandyU1gKbHdHb251RUNnWUVBNWt6aExuc0d0ZDJ2ZzJBeU1FTENUUktyOFdMWGVTY2V1QUUxUjI3RU9yYXd3YnREYnJZLwppV1R1bTRUVVZrSFB1ZkVxaitnbEFodU5nSFVhOCtrWmZQODYwN1BLUXByMUhHOCtnUVUrcEFlTjZOVmdkc1dkCmZCK2NrNVp4ZmxrRG9oaHEwQmNYWjRnL1FzalBES21jZjBXYlVjK3N4NEc3a3lFNFFpTmlUQlVDZ1lFQXp3QWYKdEpYc1VHZWxWVzREaG0xYWNzTmNLRkxSc0ZTQkJnYkM4Um5Tbk44U1NEb3hDQU05RDlKUDFNeTJqVUU5RnRQLwpWUHlla3doREJzM2pHb3ZlSTlyeHROV3F3ZTdwbXA5RVFBRk9mRUcxRU8rSkxFTDcvZytYZUZzTDZRUXZQeFFQCnN3SitDVFdnWTdXc2ovajJrajZwVlBJV2cwY1EraXRXbUQ5eXcxY0NnWUE0ZGRLaTlaQmdsOWZHcXBmRFV5cVYKZ0tWY3lYR3dCeEkxNUQzdXBFNUJZcmFVMkZjZzFsZGZWTHBXc0VycVZyb1ppUEY1VkYxMlZkRHNGRW1tVUpocQpGNXlSZUR0MjlzeHV5eXNVc0hkNStVd21MK0cxWEo5T1plV2FIVUQzeTlUak1YOUdRdEwvRTkwR2YzcWJUUjNMCjZnRzVIZVByQ1hnMkN1Zmk5dy9MUFFLQmdDZXhkMkx5aU1FV1R0N2wzS2t2V1BPK3dISS9CMVNQcjdvUEc5eU4KdmhRMHRsWEJTdHVsZTFVSVdDU1BLTVpIWjBaMFduYmFoakhkbUxTNlVEMHI2dW5uTndnZEhNUlpZdFF5akN6VgowMDRDYjQwUzBiUDZHRVlzaVRnY0JWbW1Zc1R1dk4vdnIybG1yaDNRbllseURSNFlBL0oxQlpvZ3k0R2RROXFuCitBSzdBb0dBUDFLMkQ4WUY5Y3lxUG9PRWNJNFRxRVN5bm5ERDVqbnRNWFlvVkszOC9uNjl0Q3cxRkpZaFk2UUoKYm9nRVlzcVI5TjZscllKK21LSkk1WDFTVXVtK1FWQW5BOGpNUmZyVVZJdnIyc1g2Mll4dVZlZ0tMaHpHcG5jSQpkZnR0OXFIV0hEYkw0VGY0RHdtREx5YWdLT1lOR2lVaTZPQ3QzQjdKRmlqRXZTelpudTg9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU55RVN1b3BrdzhoOTh1cDJRa3hVVVl3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURVd056QXpOVFF5TkZvWERUSTNNRFV3TnpBegpOVFF5TkZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUEyNkYzNzc3N05vRUlCVCtaNWJaaEJVZkUrWllINVNJYUNDZHFjQy9COGo0dmU5WDgKZE4vSmtIVElTSTl3Mmh1ZkNhU3M4dmJPR2laNTdKcEM4WlVlNTk4c3oxbVF3UHhwcGppNEhqcjMvYTR2d2tRRgpYZnkwM3haN2tUb29FcDJMcUFQWlhjWjExZXZsdnBaL0FnR2cxWkdyV1hGUUx4TTZLNE40WENMamZCVm5JK3dFCnVEOUora0U1c2F1MXFSTTBIWDBpMFdVUlRVUC8xVjR1VkZxMVVQV2JpcUlrOUFWdkJXQmFPTWFybnpybC9TSzYKb3BGKzFRREZPRFQ2ZElJWncxbS9peDFpMmFYV3dWTW4vcGFTempNS3EyNmx4enZLei9yS0tXUWhxN0ZXNElDeAp2dlRqb0pZOXRxK3NCSTI1dVNrVmdObkwzOTkreVcvbUl5dmp1d0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGTGdYU0xCTzhaTk5lcXV2aDdneTBNMThaaG0yTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRREFnaHNRQ2ppWUhINXhUT05oeWpSZWROVXBPcFBuNXdWQ0h1bm9nMFNhTVFyQkxvWjdUK1VKCkpaM1FWL0plMy9WM1ExdjVkbnQ0U2UxUkVXMFpqYUtRR0Y2NEZmUWZuSCszSVhibUdSOE9QOEFiWWlOTUVJVk4Kd2V3R05sR240NVkwd1NvMnVYL05qTnZNWU93TE5DdE4wbThZSlVadHFxNHdCUFZhS3N4TExpbFpMQkpEYVg2RQppREc4TTdoTEE0YnFEbGFjejF5a3RuWkNtUGFvd0c1SVo5ZXhRTE92VXlDb1pENkdWb3NyK3FkQmdGNmkwTzJFCjk4Nlozc29XT2ppbWtmVXpPTkdzbnNhN01rbjBXMlhtZHhUN0d4Mi9KVUs1RDNCOFBaajF3M2xVL3hYZ3Rlb1oKUlc3a2JEQ3JKQS9NYTZRbXV0SG4yaHFrL1h0UW14YTQKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZakNDQWtxZ0F3SUJBZ0lRZTF3SVlDSXZyVmJoMXNNL21keFhYekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TlRBM01ETTFOREkwV2hjTk1qY3dOVEEzTURNMQpOREkwV2pBd01TNHdMQVlEVlFRRERDVXFMblJoYkc5ekxXUmxabUYxYkhRdWFIVmlZbXhsTFdkeWNHTXVZMmxzCmFYVnRMbWx2TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUE2SVRLNHFJbWk1b1UKR0pWd0xkUkhhSXR2UVZQSDNOUHFjTXB0enBrSkZOb0UwSWlBRkhGN1BXWHNVbnU3T0ttL1BCbS9JNWh5NWE4UwpxQXdET3dpVDQvSU9BSGdWRWhkTFhsakJYc2lFOGJRamZQa2lmSEdKcDkxTzZ1R3U4Y2V0UGZQOFZnM2lmR2tDClVTanNyZTA5VjhPTGg4bjZVYzhUL0hUL2YvN3owajVXYmN1U1ZNQlR5TC96Uld1RjFJSGV1a0xhUVhxR054ejIKVlpRenRUZ1dXbjNOTExCdExWR2p4S3pTblErZjVZZWh2bTZ1aG8zdWx3dVNKZU4xZCtFbXFYeE5SRUFLelY4SAo1VXkzUmV1VVgrRDRPTE5IUSsvMjFQazdZbnFjZDdzK2ZMUVNoV0NGRUdaeS81cW9KMWxZSTVKeU9iQ1hnWkcwCkF6Mm1oY0syUHdJREFRQUJvNEdUTUlHUU1BNEdBMVVkRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3IKQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJd0FEQWZCZ05WSFNNRUdEQVdnQlM0RjBpdwpUdkdUVFhxcnI0ZTRNdEROZkdZWnRqQXdCZ05WSFJFRUtUQW5naVVxTG5SaGJHOXpMV1JsWm1GMWJIUXVhSFZpCllteGxMV2R5Y0dNdVkybHNhWFZ0TG1sdk1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQy9ObVVDamRYaEUvYi8KaHE2OTVGdms5SEdteHY1VE93alY5L1RTYVlYMmFHREtwclNrSVkzSDhaRlJ6VzlXcDh1TTlYNHBIZG5DWXVaNApvTldQbDIvRHQ4aGYvQkZmc1BrcG9XakRlK2h6ZVQ4RFZTN2JrVmc3Ulo2SUFGNDRvNUQ0UDNtbElUN0tYUDJVCkw5cXBHKzRLNnlaYmQ5SFViS0E2NmFsOXhnZFl2czJiUFIrNEZQZDRHR3NHUXNTYmozMS9GRitRVDd1VDBPbXEKV1R6cCt5aGtCejdxeHZVOWdQY0dleUJ0TFdhVEJmT3dVc3hNNWF2bWQvaFM4WnZJbE1PQzI2Q1M5SkgyeHBERgprRlNJM2hXdEtiVEpjUWF6WHJVbVJUL0ZkM2NkQjF5RDlDcXExd1FmK1BjRnR3UkYvWElXaUJxYTFjdzhLTTFUCkFlNmRtZ1U3Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBNklUSzRxSW1pNW9VR0pWd0xkUkhhSXR2UVZQSDNOUHFjTXB0enBrSkZOb0UwSWlBCkZIRjdQV1hzVW51N09LbS9QQm0vSTVoeTVhOFNxQXdET3dpVDQvSU9BSGdWRWhkTFhsakJYc2lFOGJRamZQa2kKZkhHSnA5MU82dUd1OGNldFBmUDhWZzNpZkdrQ1VTanNyZTA5VjhPTGg4bjZVYzhUL0hUL2YvN3owajVXYmN1UwpWTUJUeUwvelJXdUYxSUhldWtMYVFYcUdOeHoyVlpRenRUZ1dXbjNOTExCdExWR2p4S3pTblErZjVZZWh2bTZ1CmhvM3Vsd3VTSmVOMWQrRW1xWHhOUkVBS3pWOEg1VXkzUmV1VVgrRDRPTE5IUSsvMjFQazdZbnFjZDdzK2ZMUVMKaFdDRkVHWnkvNXFvSjFsWUk1SnlPYkNYZ1pHMEF6Mm1oY0syUHdJREFRQUJBb0lCQVFDN05rZ2dwOHYvTk9TZgpVcHNLMjFOUGNvejJmVjE3aU1qSFhjV0J4YWdST09VTmZnb1o2N0Q5bzNYZWg2OGJsVmpiTENQQXBqdEVnV3kxCkQwNytsZzUxUnV4TkptSll1WmErZFJua2xmQ3NwNHkzVCtTYmE5TVk3RkJoUDZyYkV4bUN1MUxkZXJwenp4ekYKZWZ6dW9RaDJCSVR3cFFnK0hFd01SYXQrUkNuT2lVZE5TcitOUGQwUkFkSXQxM1EzUGNVQXBVY083dmd3Qmdhcwo2cHF0dTJxWDFtZndpYURKMFEwK3phS1lFUC9UWnEwbWVEVitkMVBJdTJLblhCNXpzZjRoWTFRa2pmdmd4eDloCk5kM1p3RTFzVmRpeGRGZFgrbTdGazg4bytlVndiQXhLdGtuYm0rNUw3YkJhVjI1TFFXYSs2N0JmZG9PbllLd1MKdmpRbVd0Y0pBb0dCQU9tRHY5ajBOWnFtRklUQ2NReUVodVBxT0d3NVc0eXkyb1pTZVc3TGZoZnFLZGlJUEhoSQpNVG8wcWR0VjRDR2tpMjRadXd1MlFoaTVOeVR2VkcySGplbVIxNnJZVGlyVGxEUVZKZnBaTlpmVThrU1ErcGcvCmZFYUNUdllpVGE0bEMyM0JrbDFhblgrSm13dHBnR1ludzNlY2dMMGRnZUhSaUU3dW81LzAyazNiQW9HQkFQN28KZmptOUZTS3VTWU02c0ErZnBISm54OENDNXk2QUJlcVV4UjlhZExldTJyUG5iaVNXajluMVZncVg2WEZSV000SQpVTy9ZL2JOVlNIUWd0V1hSQjl5Skhpd09Ec0k4c3hhUmYyVHh1Z010TGk4Sm1JT2tyZC9Nd0MrallrZjBCc1o4CldhaFBucXRzd3VuQjJzY0lpYmxZWHdlT1dCUDZOdjM0RzN2cXE3QnRBb0dBSndUNzNyM1g0ektUUlNmVWlobnYKREZDTUF4R0dpYmt0S0xySlRjazFGYnZzS0NHRHNUbW0rQ25xcEJyeWE4eTUrN2pTOTM4S0JtV1VvRmhaakQvVgpaODBWODVkWFlIS2dWaCtlaS9teUtkL01aOGF1Q1JpNnBIR0x6amNuTWMxQTNxTTAyT0tXWk1SU294S0xBUWJ0Cjg2TzBJMlcxMlUwUThOZVJnZDRCU0hjQ2dZRUEwR2VxazNBb3NJTUg3VGQxTEVEY0JRRWVTaUY3K3dPR1VzU3cKNlRKZVRMS3pjZlNiazJSWlZkeUVMUU1JUTdJN1JhOTg1S3RtdUZEWWZNRWxMWW9ad0UrR2tJUXB3dG8zblJMMQpzY1VEekljS3hFQTNKaUhrV2g0ZlhwTll6ZlVQK1FVL2xDRU1XNkQvTm5oY2N1OWpFbHJTenUyc3l5QitCMlBxCnJJUXZQSDBDZ1lFQWtSaGRpbk82UzRQVCs5VFc2ZG5pN3pyajdCWXRTK3JYeGFKSlF6STJrU3ordkVXVTNrQmkKMnZVNEF2OVRxeWYxZ25YcDAzT1B5Wno1TUJJdjB5MEFRS0JwRjJma3M0dThvNjBTenkwSlhncE5PLzRUVUFybQpGbzBFZU5Fb0Ixd2NUUXN0ZjFWYlNpOFRKc0lMV205RHNoOGt1L0pVcGUwUHNlNkFpTmExaWpBPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Endpoints
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ingress
  namespace: kube-system
subsets:
- addresses:
  - ip: 192.192.192.192
  ports:
  - port: 9999
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9964"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium-agent
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: envoy-metrics
    port: 9964
    protocol: TCP
    targetPort: envoy-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    cilium.io/ingress: "true"
  name: cilium-ingress
  namespace: kube-system
spec:
  ports:
  - name: http
    nodePort: null
    port: 80
    protocol: TCP
  - name: https
    nodePort: null
    port: 443
    protocol: TCP
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble-relay
  name: hubble-relay-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: metrics
    port: 9966
    protocol: TCP
    targetPort: prometheus
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 50%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: 65dabcb70f2a9b302491ec2eda5ba4912e987f8773bba75c8fe52e922330d290
        prometheus.io/port: "9963"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/operator-generic:v1.15.4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        ports:
        - containerPort: 9963
          hostPort: 9963
          name: prometheus
          protocol: TCP
        readinessProbe:
          failureThreshold: 5
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: bd2b1b02e8b333410f9736e42dc2a6077c0d933efda3a6b6a1f68be20c9049fa
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.15.4@sha256:03ad857feaf52f1b4774c29614f42a50b370680eb7d0bfbc1ae065df84b1070a
        imagePullPolicy: IfNotPresent
        livenessProbe:
          grpc:
            port: 4222
          timeoutSeconds: 3
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        - containerPort: 9966
          name: prometheus
          protocol: TCP
        readinessProbe:
          grpc:
            port: 4222
          timeoutSeconds: 3
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsGroup: 65532
          runAsNonRoot: true
          runAsUser: 65532
        startupProbe:
          failureThreshold: 20
          grpc:
            port: 4222
          periodSeconds: 3
          timeoutSeconds: 3
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      securityContext:
        fsGroup: 65532
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              - key: ca.crt
                path: hubble-server-ca.crt
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: e8acee96ed990156efd0291c8c33709d2c7902d2ec993eefa16c7cd3d1a9d84b
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.13.0@sha256:7d663dc16538dd6e29061abd1047013a645e6e69c115e008bee9ea9fef9a6666
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        readinessProbe:
          httpGet:
            path: /
            port: 8081
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.13.0@sha256:1e7657d997c5a48253bb8dc91ecee75b63018d16ff5e5797e5af367336bc8803
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: 65dabcb70f2a9b302491ec2eda5ba4912e987f8773bba75c8fe52e922330d290
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
        prometheus.io/port: "9962"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: GOMEMLIMIT
          valueFrom:
            resourceFieldRef:
              divisor: "1"
              resource: limits.memory
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/cilium:v1.15.4@sha256:b760a4831f5aab71c711f7537a107b751d0d0ce90dd32d8b358df3c5da385426
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                set -o errexit
                set -o pipefail
                set -o nounset

                # When running in AWS ENI mode, it's likely that 'aws-node' has
                # had a chance to install SNAT iptables rules. These can result
                # in dropped traffic, so we should attempt to remove them.
                # We do it using a 'postStart' hook since this may need to run
                # for nodes which might have already been init'ed but may still
                # have dangling rules. This is safe because there are no
                # dependencies on anything that is part of the startup script
                # itself, and can be safely run multiple times per node (e.g. in
                # case of a restart).
                if [[ "$(iptables-save | grep -E -c 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN')" != "0" ]];
                then
                    echo 'Deleting iptables rules created by the AWS CNI VPC plugin'
                    iptables-save | grep -E -v 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN' | iptables-restore
                fi
                echo 'Done!'
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9962
          hostPort: 9962
          name: prometheus
          protocol: TCP
        - containerPort: 9964
          hostPort: 9964
          name: envoy-metrics
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium-dbg
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/cilium:v1.15.4@sha256:b760a4831f5aab71c711f7537a107b751d0d0ce90dd32d8b358df3c5da385426
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.15.4@sha256:b760a4831f5aab71c711f7537a107b751d0d0ce90dd32d8b358df3c5da385426
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: WRITE_CNI_CONF_WHEN_READY
          valueFrom:
            configMapKeyRef:
              key: write-cni-conf-when-ready
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/cilium:v1.15.4@sha256:b760a4831f5aab71c711f7537a107b751d0d0ce90dd32d8b358df3c5da385426
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.15.4@sha256:b760a4831f5aab71c711f7537a107b751d0d0ce90dd32d8b358df3c5da385426
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        projected:
          defaultMode: 256
          sources:
          - secret:
              name: cilium-clustermesh
              optional: true
          - secret:
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
              name: clustermesh-apiserver-remote-cert
              optional: true
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              - key: ca.crt
                path: client-ca.crt
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
---
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
spec:
  controller: cilium.io/ingress-controller
