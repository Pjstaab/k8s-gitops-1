# This manifest was generated by automation. DO NOT EDIT.
apiVersion: v1
kind: Namespace
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-secrets
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-ingress-secrets
  namespace: cilium-secrets
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator-ingress-secrets
  namespace: cilium-secrets
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - update
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  - ciliumcidrgroups
  - ciliuml2announcementpolicies
  - ciliumpodippools
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  - ciliuml2announcementpolicies/status
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - delete
  - patch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  - ciliumcidrgroups.cilium.io
  - ciliuml2announcementpolicies.cilium.io
  - ciliumpodippools.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumpodippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumpodippools
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  - ingressclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator-ingress-secrets
  namespace: cilium-secrets
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-operator-ingress-secrets
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-secrets
  namespace: cilium-secrets
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-ingress-secrets
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  annotate-k8s-node: "true"
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: maglev
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: hybrid
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "1"
  cluster-name: talos-default
  cni-exclusive: "false"
  cni-log-file: /var/run/cilium/cilium-cni.log
  cnp-node-status-gc-interval: 0s
  custom-cni-conf: "false"
  debug: "false"
  disable-cnp-status-updates: "true"
  egress-gateway-reconciliation-trigger-interval: 1s
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "false"
  enable-bpf-masquerade: "true"
  enable-cilium-endpoint-slice: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-envoy-config: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-host-firewall: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "true"
  enable-ingress-controller: "true"
  enable-ingress-secrets-sync: "true"
  enable-ipv4: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-networkpolicy: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "false"
  enable-metrics: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  enforce-ingress-https: "true"
  external-envoy-proxy: "false"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA, drop tcp flow http icmp port-distribution
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  ingress-default-lb-mode: dedicated
  ingress-lb-annotation-prefixes: service.beta.kubernetes.io service.kubernetes.io
    cloud.google.com
  ingress-secrets-namespace: cilium-secrets
  ingress-shared-lb-service-name: cilium-ingress
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipam-cilium-node-update-rate: 15s
  ipv4-native-routing-cidr: 10.0.0.0/8
  k8s-client-burst: "10"
  k8s-client-qps: "5"
  kube-proxy-replacement: "true"
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  mesh-auth-enabled: "true"
  mesh-auth-gc-interval: 5m0s
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  operator-prometheus-serve-addr: :9963
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  prometheus-serve-addr: :9962
  proxy-connect-timeout: "2"
  proxy-max-connection-duration-seconds: "0"
  proxy-max-requests-per-connection: "0"
  proxy-prometheus-port: "9964"
  remove-cilium-node-taints: "true"
  routing-mode: native
  set-cilium-is-up-condition: "true"
  set-cilium-node-taints: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: 100ms
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: talos-default\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ngops: true\ngops-port: \"9893\"\nmetrics-listen-address: \":9966\"\ndial-timeout:
    \nretry-timeout: \nsort-buffer-len-max: \nsort-buffer-drain-timeout: \ntls-hubble-client-cert-file:
    /var/lib/hubble-relay/tls/client.crt\ntls-hubble-client-key-file: /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files:
    /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls: true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRWCtxQWZxMjA4TmVxWFRsZVpsdFZFVEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TlRBME1qTXpNelExV2hjTk1qY3dOVEEwTWpNegpNelExV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRFk0SFlkd1RyVEpKK2xaT2k0S3AzYWFIdEdRekNxV1ZQczk4Q2crVDJ6T2hhSFNSUDUKc1ZtS0YzZzl1ODByK3krVzNKWmo1emYxNTdzYWo1Z1B6am9CbGRhVWplcGtYR3hBdFZDR2FOSHFNOWF3ZWIyVQpFaDdldzBjWnZKWW16YXpTaUtBVUY3V2RmcUFaOU1CMDhxRmYydXdISWorWEswYmpKK3hCbCs4c3owL2FJYTFhCllxQmNlbERQeUpsUXNMNjdlK21JdnlZcFdDci9nNTVuRUZaK0lzcldoWkRRY2RTU0k3ZW1VaDVMT0RPTE4yMjUKdmZhNk1NVmFlWGo0YmUzQksrcmpXQnNCdzIxWnVRV3JyOXA1QXF3b3Z4UW1QRHdmeXFEMmwzbjhqdklIWVRFMgozN25PaG5JdjkxS1ZMYno4SjdrRzlpNkczRTNLa25sK3ZRTjFBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVjQmxHNmNHMTBlRnRjK1Q0bUQ2Z0g1NEdqSkV3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFMdU5uYWx1RjU1VTFNdDF4ZzhWcFMrQUVuSjZ4MXNJMU1JUmxlRHZISGk3QjFtTytEYjdyV2tiCktHU3dCdlFjVHJ3ZmNvNkQ4Nlk0bktJVHpQQWx0NE5GZVFNbXV5TUZ2ZURqNTMrMStZQkpZcnFqbW5TbDgwNlQKd1d1QnpmbENHYzY0dFpmTFpYUjBYRVlJSFhLOEZjaXJ3RjZQa0U0TW5WU3psck9Ma3dFTVYwYVExQm84K3VKZApZd0J4QW4rL21aUTJtY1FScVFEZ0haL0QxdEZtN1l5L0RZOEY0bGxyd2IxVHU1ZlhUT2JNVWxad2tDdzBjcE8vCmRDUFZmT05XajNXbnVGV3V2OTZURG9UZ2VPaGtVZ3Vybi9zaUF0Qlo1NnE4TmcyRFFGSkRDTFZZelJBVUNmQ28KVWtQenM5MUhkSTcrZ0g4VFhZQkNxS2I4TXkrVVJmST0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBMk9CMkhjRTYweVNmcFdUb3VDcWQybWg3UmtNd3FsbFQ3UGZBb1BrOXN6b1doMGtUCitiRlppaGQ0UGJ2Tksvc3ZsdHlXWStjMzllZTdHbytZRDg0NkFaWFdsSTNxWkZ4c1FMVlFobWpSNmpQV3NIbTkKbEJJZTNzTkhHYnlXSnMyczBvaWdGQmUxblg2Z0dmVEFkUEtoWDlyc0J5SS9seXRHNHlmc1FaZnZMTTlQMmlHdApXbUtnWEhwUXo4aVpVTEMrdTN2cGlMOG1LVmdxLzRPZVp4QldmaUxLMW9XUTBISFVraU8zcGxJZVN6Z3ppemR0CnViMzJ1akRGV25sNCtHM3R3U3ZxNDFnYkFjTnRXYmtGcTYvYWVRS3NLTDhVSmp3OEg4cWc5cGQ1L0k3eUIyRXgKTnQrNXpvWnlML2RTbFMyOC9DZTVCdll1aHR4TnlwSjVmcjBEZFFJREFRQUJBb0lCQUNRcW9tZnAzbFp4cUJIYgoxeGRIUEJXOUVMbXg0TDYzc05BMnJLL3JnSWVQNjB2YU92T0x5TVBIa0N5elVjN0F6N25YeFZpWnFYSmZsNHNoCllSbFpxY0N6N1JuTzVNU2h5UWV0ZE9WRk82UlR5cnlaUUswZHJIbzNsSGJOUlRqcFdhV3VWUXVrdkl1c0h5VFUKOVBkTHN1K2FRWHdiRVFHem5ObXF3YkphbE84aXdLejZYbTZvSkpETGl4QTJzOWhUNmV0azBsa0QzclUvSitlSAptR0p2dlBYNndGdEFuN014NjdvMHBhUkRzY3pKa1V4Mm1QMnVpUDBRNkhRS3FYcGZldDIwMU1nMTRlMkJqS1paCk9wREl4emdTSkFaRFgyWXV1TTEvT2JiQWZjTEYzbXN0aENWU3VLbjZESHpGNzN1T2dIbkxpUStidEhnUjRMdksKUUJuRTZhRUNnWUVBOHc5amthK2U0YThSTE9nWC8vWE5YdEcxRU1RU0NQemtpZ0xTcEpYUG1NSTlQanhwM0FGUgpGQnNTcUI3OHdTcGIvQ3VBRENEVE1LeHVLdlZ1VktvMHJWRGFEdDhqTnRldjQyaUd0SVFFRHRVb3FvbExrOExLClkrUTFOUEV0VnAycGJmNytiWmRBOFNVMHZwcFIyYUZCK3RBQllpMFE0OGg4OTBnVEVOaFdPSmtDZ1lFQTVHdzUKM3RXajdoQy92ZVpLTmpOc3JneFZSUzJRUFI4Q2NPRzMrMHJYOU9kbTBXWGZsQVVWQkt3dTdnTFhBMzlGL3lmZwpTc3lmOFNQQjlWL1hPT1QxSVIzWjZ1Ty91TG94U0plQ1c4b0RvcFRhRXdweFBNQW5XMkROdW1YcWxUcHBKMWZkClczd0szTElvSFBrU0xVZ3pWMW81YnVGM2twRVArM2dCRUE5dkh6MENnWUJaRjJ6eHU2UExLWFpzTlc2R25ieDMKWXZxeGVJejd5bWFpeDhJYUhlZUlJTHArRTNyaDc0R2Vrd1hWcGZZVGY4bFR0MFlxSytYOVUxYldYRHZpd0xpcQpScGFIR1BjNVpQbk5xMFNrNmpicWtPdGxCd295MFJXS1k5MjAyQ284TTNJbEpYQnhEeDM0eGlCOU5PZUhrL294ClN3a1d5Vm9GaERsNkVtc2FvNUdIRVFLQmdEaHFLbGpJdHZZREdQZ1R1bHhza3ZqaGZ1WFkvUGk3Z2VUVE9wZEwKd3M1dm9Fc3pOK2JjNG5ZRytJZzhGMUo3eXBQY0MxOHQ3b3FsNUM5di9qM0UvbTJ4YTdMQmtRWlVwZnRod0FaZgpmRXBaTFFycTExRER2SFNyRWVScGEyaHp4cWk2NEtiSm1mMHIyeEJjeTRwM2ZJYWtkKzdVcksxOE9sQkhNU3dBClE5ZVpBb0dBQTNETFBqM2oyWGVYWFk1QXoyVWpDWVlFV25nbWpzWGgza1VIdkdxYTZvZVdBMlc4bmh1OUNYa0QKbU5tMndnb1cxdnVJMzJHaHJzNGxVT2dMZkVYVm1iS2o4azBTZVdCTXVkNFQyZVNDU3ZoNW5hd29xTjlPemdoeQovZldmalBnYjVOQzBrbDFpQ2s0VkovZWpxdE5McEg1TG5rZkQ1bmRPbjkzQmw3OG5sNjg9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRWCtxQWZxMjA4TmVxWFRsZVpsdFZFVEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TlRBME1qTXpNelExV2hjTk1qY3dOVEEwTWpNegpNelExV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRFk0SFlkd1RyVEpKK2xaT2k0S3AzYWFIdEdRekNxV1ZQczk4Q2crVDJ6T2hhSFNSUDUKc1ZtS0YzZzl1ODByK3krVzNKWmo1emYxNTdzYWo1Z1B6am9CbGRhVWplcGtYR3hBdFZDR2FOSHFNOWF3ZWIyVQpFaDdldzBjWnZKWW16YXpTaUtBVUY3V2RmcUFaOU1CMDhxRmYydXdISWorWEswYmpKK3hCbCs4c3owL2FJYTFhCllxQmNlbERQeUpsUXNMNjdlK21JdnlZcFdDci9nNTVuRUZaK0lzcldoWkRRY2RTU0k3ZW1VaDVMT0RPTE4yMjUKdmZhNk1NVmFlWGo0YmUzQksrcmpXQnNCdzIxWnVRV3JyOXA1QXF3b3Z4UW1QRHdmeXFEMmwzbjhqdklIWVRFMgozN25PaG5JdjkxS1ZMYno4SjdrRzlpNkczRTNLa25sK3ZRTjFBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVjQmxHNmNHMTBlRnRjK1Q0bUQ2Z0g1NEdqSkV3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFMdU5uYWx1RjU1VTFNdDF4ZzhWcFMrQUVuSjZ4MXNJMU1JUmxlRHZISGk3QjFtTytEYjdyV2tiCktHU3dCdlFjVHJ3ZmNvNkQ4Nlk0bktJVHpQQWx0NE5GZVFNbXV5TUZ2ZURqNTMrMStZQkpZcnFqbW5TbDgwNlQKd1d1QnpmbENHYzY0dFpmTFpYUjBYRVlJSFhLOEZjaXJ3RjZQa0U0TW5WU3psck9Ma3dFTVYwYVExQm84K3VKZApZd0J4QW4rL21aUTJtY1FScVFEZ0haL0QxdEZtN1l5L0RZOEY0bGxyd2IxVHU1ZlhUT2JNVWxad2tDdzBjcE8vCmRDUFZmT05XajNXbnVGV3V2OTZURG9UZ2VPaGtVZ3Vybi9zaUF0Qlo1NnE4TmcyRFFGSkRDTFZZelJBVUNmQ28KVWtQenM5MUhkSTcrZ0g4VFhZQkNxS2I4TXkrVVJmST0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQVBiWFY4T1pjTzhvVjFYMmU3OXA1WVl3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURVd05ESXpNek0wTlZvWERUSTNNRFV3TkRJegpNek0wTlZvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQW84MUI1QW1pR3NXK0gyLy9hKzlFcEhkd2RtNncKdll3OFR4SjlhdlFjZXhBdWZXdXE3WWUzSXliLzg3bWkxcGF3bERuOFJHODVPYzZDSDB2dVZpNVRUSDl6Sm5peAp6c1pYZ2U3UGlha2JtSUs1NnN2RGptenpWMDlGUmpSUUNtOXg1THZLc3BzcXVacmxBNTZzaVNFTWQ2VUVSYlNFCnYxYkhUeW1sOUg1OE5rVHJ6WjArVVBpVDU3WTVjS00xaWdxeEpmd2dvK2E0RkZiVkNEQ2ZlNGxwVVgxVjdpWUEKT2NTUVBCNjN1ZVQ5bG96Mnd3QitxQ1FMUklLUlNsTWRYSWYwM3EzalJoczFOMC9YTUl5MnFEeUNJWldXMmhRSQoyWUpCMTRRV0dSTURZWjViTUUrbzhSaS83UnB6VTQ4MTVxYWEwdFpUazNOL0czd2pYbG10OFlaaW93SURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCUndHVWJwd2JYUjRXMXo1UGlZUHFBZgpuZ2FNa1RBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBRFB2ZHl5N1JrbW4wejc5NDFuL3NEbDBhWDlvRzh4QkpreVMvVzd6UXNSRFRCWE8KUTMwbGdtS281TjFtSm9UVUtxcGZySnB0RDVjaHdUMmhEcjN6d1h3OEdGQk9wazV0bDAzN20xUi83S0YvZ005SQo4TUptV21UcHZtT3VYOGVidnFSRW95TklLNUxPb3lRclVwNFFzWHptSktYSmlQUDZuOURyTXg3b2NaVGJMTW1UCml3dSswWE9HYUNJNC9uU3haQk9JWWRhVmljelVORzMrb3dZaDk2OWRSbE5DSjZEYXdHTUh6MGdtQm5hWE1aVU0KQ0drK0l3VjhNejl2ajFkUXJPV1lSTFdteU42ajd3V1RqTzdRT2ZNTmVhYXVvT0l6RkRRbHY3K1pqN2JEQ0x4RQpEbDJTVGlEVTVpY3BZYVcxSVFYMFVCR1NTL1FzVHJVNWpVNVlLZUk9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBbzgxQjVBbWlHc1crSDIvL2ErOUVwSGR3ZG02d3ZZdzhUeEo5YXZRY2V4QXVmV3VxCjdZZTNJeWIvODdtaTFwYXdsRG44Ukc4NU9jNkNIMHZ1Vmk1VFRIOXpKbml4enNaWGdlN1BpYWtibUlLNTZzdkQKam16elYwOUZSalJRQ205eDVMdktzcHNxdVpybEE1NnNpU0VNZDZVRVJiU0V2MWJIVHltbDlINThOa1RyelowKwpVUGlUNTdZNWNLTTFpZ3F4SmZ3Z28rYTRGRmJWQ0RDZmU0bHBVWDFWN2lZQU9jU1FQQjYzdWVUOWxvejJ3d0IrCnFDUUxSSUtSU2xNZFhJZjAzcTNqUmhzMU4wL1hNSXkycUR5Q0laV1cyaFFJMllKQjE0UVdHUk1EWVo1Yk1FK28KOFJpLzdScHpVNDgxNXFhYTB0WlRrM04vRzN3alhsbXQ4WVppb3dJREFRQUJBb0lCQUI0S1A2SkZqZ0FnOGJ3cwpPd2lkYWRaTHZVbExCWWpObGlYZU96Z0pLc3Y2N0x1OXFpeERybmQ0NkluWEtxRDJJODRiVUVOd3Jtc0dqMkNUCitWSyt6aklDVWFqbGk1NWpTNXNkbzl3WU1tSm0zeGZMWk1MVEFsR3B6UWVTQW5mWGRtaS9jKzRMZk90ckY4THgKTDYwNmJXSG4xbisrR25aSXdPYW91Ykc4SEtXSzlSbHhHYmdMQnFuekZ0bDBNYWllODR1bktNTXJmSk1CRXZvdQp1N1piN3ZEV3hST0ZpZmJYUmJnb3MzcCtNeTBtNXpNUnhlSFM4bjkzekdLSmYvSlRwYW9nUjcwYUFEelNhVTZYCmtCTzd3NEhVMmVyNzNRNWo1cXAyQ0s5QmRQTGFkOGZscnRwMW1xYVRPYlNoSzdPNzZyeHFlZEQvNWRURDQxWGEKL2gyYTJZa0NnWUVBeGpVOW1ZQ1JQM290L2FVbTR4MTROMmdQNWpocElTbXNLZFlsY1NveEFCZmthc3Q0amw1RgpMcHIreFlVTnhEVy9OVld1VEthOXNadTFmcHY5eGk2VlZEWWZOcWdGdlM1YXJhck43TmZZMlN3TzJFQ1lORWF1CnV3SkQ2TlFEcm1rR3ZXTUtPMnIxQ0NySzhzT0E1d1hjckZ0S2IyUWdEdlVpUUVXZ2ZZYVF1YWNDZ1lFQTA0L1oKZVdHUTNzcG5XZXdZS3pjcE93dFU4eFNhcXo5Um5ZN3FoK2JsdjdUTTZhTm1OV0UySkRFdnR5NVo1MzYwNmFtZQo4RmpzYktaWVpaZmRYdSt0SmYreCtIcUU0VUpDMXREa241ejV0ZXI1dERBRFFKNzlRRjIrdHZjdmZXOEh6eXFqCmlPbUkrVXRLZmFYVHBGV0tRY2l4aGRhNXc5Zll4RWdRd0ovdXRxVUNnWUE2N2dkamhTc3FJVXhkTm1ZS2JtK1kKb1pMZ2t2TUd6aG9HMGttTmpNckd5Vk83UU1XV0pvY1JKVG9NUmRQaSswdmZNcHRBNU81UFNRazhIR3JtS21GeAppU25jbVRZam1nMlJ4cyswMURQLzFhNlFNeHhOcHBvNnRhQzFMNXZzbGdOUCtZdElRVE9hK3dZZUNXeGd3NGhwCm9qYk9TWW1TaU9WbkVJeDM1Yk5QendLQmdRQ1I4bXVwcytmMytoT2dVaUkrTmRpSXRnR05pOHBEbHZQYnlNcjgKcEFvYzNVSjdiMURFUkdMUVJ1cE82WGYySGsvNTNoMGFXNDRHU2g4elByZmxsVnlTbVRtU1hCc3ROc1BiWTlKRQpWa3RoOTA3NXdpR01RK0lidEZBcjhveGRjT29uUFpnQmpISUU0SzdyelNrYTlqUGh1K3pUa3RVbVNOSnVYZlRJCm5jeFZUUUtCZ0RKTjZ2cDZYVFFHSVBZRkZyWFBWS1I5aU5BSGlRL3JJNVZSQzRqVkU4M2RQTXZwT251Y0o0ekEKcFhJTnltTzM0QU1RSEtLZDhhNXk4MUpkSExrZlpKR245ejcrbmN5MEpJZjVYNE55cmtNQ3pQSG9Ob1NyVm5ReQpmVnlJLzZVQWxvbDZQa096RzF2bWtzQnRndjZ1aEZVVWJ5WDdXTWpCdW9Ram5BMXpVK2dKCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRWCtxQWZxMjA4TmVxWFRsZVpsdFZFVEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TlRBME1qTXpNelExV2hjTk1qY3dOVEEwTWpNegpNelExV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRFk0SFlkd1RyVEpKK2xaT2k0S3AzYWFIdEdRekNxV1ZQczk4Q2crVDJ6T2hhSFNSUDUKc1ZtS0YzZzl1ODByK3krVzNKWmo1emYxNTdzYWo1Z1B6am9CbGRhVWplcGtYR3hBdFZDR2FOSHFNOWF3ZWIyVQpFaDdldzBjWnZKWW16YXpTaUtBVUY3V2RmcUFaOU1CMDhxRmYydXdISWorWEswYmpKK3hCbCs4c3owL2FJYTFhCllxQmNlbERQeUpsUXNMNjdlK21JdnlZcFdDci9nNTVuRUZaK0lzcldoWkRRY2RTU0k3ZW1VaDVMT0RPTE4yMjUKdmZhNk1NVmFlWGo0YmUzQksrcmpXQnNCdzIxWnVRV3JyOXA1QXF3b3Z4UW1QRHdmeXFEMmwzbjhqdklIWVRFMgozN25PaG5JdjkxS1ZMYno4SjdrRzlpNkczRTNLa25sK3ZRTjFBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVjQmxHNmNHMTBlRnRjK1Q0bUQ2Z0g1NEdqSkV3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFMdU5uYWx1RjU1VTFNdDF4ZzhWcFMrQUVuSjZ4MXNJMU1JUmxlRHZISGk3QjFtTytEYjdyV2tiCktHU3dCdlFjVHJ3ZmNvNkQ4Nlk0bktJVHpQQWx0NE5GZVFNbXV5TUZ2ZURqNTMrMStZQkpZcnFqbW5TbDgwNlQKd1d1QnpmbENHYzY0dFpmTFpYUjBYRVlJSFhLOEZjaXJ3RjZQa0U0TW5WU3psck9Ma3dFTVYwYVExQm84K3VKZApZd0J4QW4rL21aUTJtY1FScVFEZ0haL0QxdEZtN1l5L0RZOEY0bGxyd2IxVHU1ZlhUT2JNVWxad2tDdzBjcE8vCmRDUFZmT05XajNXbnVGV3V2OTZURG9UZ2VPaGtVZ3Vybi9zaUF0Qlo1NnE4TmcyRFFGSkRDTFZZelJBVUNmQ28KVWtQenM5MUhkSTcrZ0g4VFhZQkNxS2I4TXkrVVJmST0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZakNDQWtxZ0F3SUJBZ0lRUXFEbW9vWmd1bzNkU1IrQjBwczNiREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TlRBME1qTXpNelExV2hjTk1qY3dOVEEwTWpNegpNelExV2pBd01TNHdMQVlEVlFRRERDVXFMblJoYkc5ekxXUmxabUYxYkhRdWFIVmlZbXhsTFdkeWNHTXVZMmxzCmFYVnRMbWx2TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF3VVhxQTFSZzEyU1MKcVNXWlB3MkJlTkl1cHJlUFFTMWFKRW5jWnpsZXNJL2FrQUplV0x6MG44dzkrcjJlUTBQSm9CcDN6SSszSlVqaAo0WG5rWncrbGtVMHFWNTlERmpCdFUzZnVFUHhtUWw4bHRFNEYwTmU4b0x1WmZEYUF5aTRCbng1cmE3REtRclAxCkJIdkpYYTdUb3pxMk9laEhkelk2TklYV0lzM3pHOVQ3OU9JTUJQQndxUTUrTWVtRnpKbkJWV1N5K09adVBqYVcKby85U1NRaHpNT0dVUUJxV2ZYMkxrNTFaTllNWExtdTR4d0ZmU1lMeGd4aDVJQ0lQRElGYlhPUnFOdGplK2UxMgpvcVIyaDR5NkI0MGtwNUxjQSsxOUtPbTdadmQ3NFlSNEdOM3VkalZiVEthM2Z0aEZLTFhZU1NubUJaUjQ3a1NnCnlBaFp3QklFd3dJREFRQUJvNEdUTUlHUU1BNEdBMVVkRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3IKQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJd0FEQWZCZ05WSFNNRUdEQVdnQlJ3R1VicAp3YlhSNFcxejVQaVlQcUFmbmdhTWtUQXdCZ05WSFJFRUtUQW5naVVxTG5SaGJHOXpMV1JsWm1GMWJIUXVhSFZpCllteGxMV2R5Y0dNdVkybHNhWFZ0TG1sdk1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQnNFd1lVZlFTUFdZUHkKeGhVUEl3a1ZwdjMrV1NwdUc0R2NmUitMUVhHVmNsbzE3anh4YUdNamdYNU0raWJZMmNSV1ZjM2Q5eVdPcmRFTQo1L1dYdW1EaUl6cnVMTjhtcGJETDg4TzhDbjNkYjFRdHhhemVEMmNPSHRBMVAvK3BLeks1Rmk2VEtYRkpjeW5tCll3WVIzTXlrb0ZneTE1WU1IMEgydFlxd1RoSFVrSzdOYkdPVnNyOVNYalgxb0h0S3ZpbDcrZ25iUGMwT0RFbHAKcFpCZnVuQ1hENVErTmNxYkx5UGFORVhIMG9TM3AzaFJkZmlpZXFwVUtrUGxYTlpVdk1wZ3Y2VFRPbzR6ZXpqNwpvNFovWWpmZ0pMY2prczZyNWVUbTRuV2pUM0VQeDkva3o4YklZY0EyejlLN2prUnRQbzlXQWg2a2N4QmxmZjNFCkV5Qk1FUy9oCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBd1VYcUExUmcxMlNTcVNXWlB3MkJlTkl1cHJlUFFTMWFKRW5jWnpsZXNJL2FrQUplCldMejBuOHc5K3IyZVEwUEpvQnAzekkrM0pVamg0WG5rWncrbGtVMHFWNTlERmpCdFUzZnVFUHhtUWw4bHRFNEYKME5lOG9MdVpmRGFBeWk0Qm54NXJhN0RLUXJQMUJIdkpYYTdUb3pxMk9laEhkelk2TklYV0lzM3pHOVQ3OU9JTQpCUEJ3cVE1K01lbUZ6Sm5CVldTeStPWnVQamFXby85U1NRaHpNT0dVUUJxV2ZYMkxrNTFaTllNWExtdTR4d0ZmClNZTHhneGg1SUNJUERJRmJYT1JxTnRqZStlMTJvcVIyaDR5NkI0MGtwNUxjQSsxOUtPbTdadmQ3NFlSNEdOM3UKZGpWYlRLYTNmdGhGS0xYWVNTbm1CWlI0N2tTZ3lBaFp3QklFd3dJREFRQUJBb0lCQUZyY1hXbDNUNWV6Um1lUwpyM3EvQkxFaVRxQStCM0RpdTAvNEVVL04zc0F1d05lVzVYZmVUVHFhc0VDaXlEWmpOZlM0dkwxRWl4dFNLaTd3Ck9QcGlscm02aHo5dU5nSEdmbjhSRUxDWG1CTjMyNmZxVGoyaVRxRlowSXhlcXlsaGU0MnNwVitaVzEwRWNSbk0KZ0J3MHhuWWtjZXJEVW1XdTdxb21pVWNQZjAwRGZ1S1FNdmFYR0tlNDVBb3V3QnJvdE8rZkxuVkp3VWJxdkpjUAp3ZjFzbDZOcXlZWGlFd1NFd0I4MEdyRlRZR0x5ZHlkMHBUNnl0S1BZYm5TWGpwanBpZnAwVWNNb253enBVUis3Ck9FNzYvd3hlKzhCakthVkhKK1luNFFqdXFLWmJtdVdLTm1ROWZTNDZYZ1QweGxvVlJHK0Y5YnVJZS90enNwY2cKUDRnMVAzRUNnWUVBd2lUNlJNZ29JWm93SmhHcjRHMWpsR20za05kZkRPNFh1QVVoL1c0T2FrSjBqQ2gyYU1WbQplbHJ3dk4vc0x5MldMU2FUU0VrbHFxK00vbnRTM0hvUVNBMHNod3RRajdPdURxcjNqSjF5N2NPU2N6UXE1ZUgwCnFvU1g1TEZjcVJ4dlBJZzVxVjhlVTlsK2tOL2RHT1hMcUdaZUx5VitSQW1HbWFKT3R2dG1Mb1VDZ1lFQS90bmQKL29UV2FEbyt4OFh5NFJtSzFDbEhOdTdLMkMwQnRZcm5TeVFDQlBGbG9QamlnVkc1cXp5Nko3c083SGlHd2p2bwoxMDltWDBpUFRIaDBzK2ZvSndsNHZMeXJ0RWhKNUV0azI1ck9PQmFZWlpRTmhyQlpJWC82WGs0dFVIVzJuYmZJCjBEcVNBY2tUVjlVZHJYV0ZDN08ydHlVN2ZCb2pkcmF4aFZGQXZLY0NnWUJ1aFJaanFYNFBBdk45K0hsYjNXbmUKeHYvVTJJWW5takt1YzEyU0krRFk1TlBzSmV5aVlCMmljYnF5Q3RjdFZFbzFrY3d1VGxXL0FRakdwZlhaeFRNWAprVWhUNkVFSVRVVTgzRjdvRVltbmlMb0tFeHlJbVVUcS9XaHFxLzBQMkR3S3ZaSDF0VXhTZDNIeGp6OFNPVjdpCmtzUHpHdWp5V21uaGMrQlRrbkhzOFFLQmdRQ24xYU0xTXhaZ25ic3FwVnBHbENPeGhWMjQ5NW51cy9Va01jNFEKMWkzZVEzdkNmeVhzTkg0cUgxd1pQaitkeStJem1IREhHeXM0SlBqNlMzblA0VElxUXpxWVVVaGkraGh2bUpkYgphSi9Xb0VyTTJxdnR2OFZ6SW0wb0hpUUprUHdxOGhYMXpCekx3RGhVNTYwYnh3RlBxNUx4R2p3S2hzeEVLaHpPCng2dnlrUUtCZ0RiRWFXR3ZzdE9DYjRiNTRteFU5ZURLMG55aTZIZnFYSEc3dTVGNXMvR1d6cXpCQk5Ib1k3TVQKbExvMVBzZVhubnhEM0RYTDFIK0dRUGJCb1JOM29MempVbHI0UTFKTTlScW1TdVJ1SWhZRDJzNFJ5Q2twZGJZSQo3TWs1YStrYTJFdzJSTjJnM3BCUS9icWcyemxmcjRqYmQxSzA1MzRHSnQ3aUtOTkNVMGpGCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Endpoints
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    metallb.universe.tf/loadBalancerIPs: 192.168.50.195
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ingress
  namespace: kube-system
subsets:
- addresses:
  - ip: 192.192.192.192
  ports:
  - port: 9999
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9964"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium-agent
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: envoy-metrics
    port: 9964
    protocol: TCP
    targetPort: envoy-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    metallb.universe.tf/loadBalancerIPs: 192.168.50.195
  labels:
    app.kubernetes.io/managed-by: Helm
    cilium.io/ingress: "true"
  name: cilium-ingress
  namespace: kube-system
spec:
  ports:
  - name: http
    nodePort: null
    port: 80
    protocol: TCP
  - name: https
    nodePort: null
    port: 443
    protocol: TCP
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble-relay
  name: hubble-relay-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: metrics
    port: 9966
    protocol: TCP
    targetPort: prometheus
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 50%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: ad705f4cae0ce149034f98e06bdb7a49fe38c52ad23770c6bad2fba71c5e6b1f
        prometheus.io/port: "9963"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/operator-generic:v1.14.5@sha256:303f9076bdc73b3fc32aaedee64a14f6f44c8bb08ee9e3956d443021103ebe7a
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        ports:
        - containerPort: 9963
          hostPort: 9963
          name: prometheus
          protocol: TCP
        readinessProbe:
          failureThreshold: 5
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: bd2b1b02e8b333410f9736e42dc2a6077c0d933efda3a6b6a1f68be20c9049fa
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.14.5@sha256:dbef89f924a927043d02b40c18e417c1ea0e8f58b44523b80fef7e3652db24d4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        - containerPort: 9966
          name: prometheus
          protocol: TCP
        readinessProbe:
          tcpSocket:
            port: grpc
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsGroup: 65532
          runAsNonRoot: true
          runAsUser: 65532
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      securityContext:
        fsGroup: 65532
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              - key: ca.crt
                path: hubble-server-ca.crt
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.12.1@sha256:9e5f81ee747866480ea1ac4630eb6975ff9227f9782b7c93919c081c33f38267
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.12.1@sha256:1f86f3400827a0451e6332262467f894eeb7caf0eb8779bd951e2caa9d027cbe
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: ad705f4cae0ce149034f98e06bdb7a49fe38c52ad23770c6bad2fba71c5e6b1f
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
        prometheus.io/port: "9962"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/cilium:v1.14.5@sha256:d3b287029755b6a47dee01420e2ea469469f1b174a2089c10af7e5e9289ef05b
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                set -o errexit
                set -o pipefail
                set -o nounset

                # When running in AWS ENI mode, it's likely that 'aws-node' has
                # had a chance to install SNAT iptables rules. These can result
                # in dropped traffic, so we should attempt to remove them.
                # We do it using a 'postStart' hook since this may need to run
                # for nodes which might have already been init'ed but may still
                # have dangling rules. This is safe because there are no
                # dependencies on anything that is part of the startup script
                # itself, and can be safely run multiple times per node (e.g. in
                # case of a restart).
                if [[ "$(iptables-save | grep -c 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN')" != "0" ]];
                then
                    echo 'Deleting iptables rules created by the AWS CNI VPC plugin'
                    iptables-save | grep -v 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN' | iptables-restore
                fi
                echo 'Done!'
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9962
          hostPort: 9962
          name: prometheus
          protocol: TCP
        - containerPort: 9964
          hostPort: 9964
          name: envoy-metrics
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/cilium:v1.14.5@sha256:d3b287029755b6a47dee01420e2ea469469f1b174a2089c10af7e5e9289ef05b
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.14.5@sha256:d3b287029755b6a47dee01420e2ea469469f1b174a2089c10af7e5e9289ef05b
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/cilium:v1.14.5@sha256:d3b287029755b6a47dee01420e2ea469469f1b174a2089c10af7e5e9289ef05b
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.14.5@sha256:d3b287029755b6a47dee01420e2ea469469f1b174a2089c10af7e5e9289ef05b
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        projected:
          defaultMode: 256
          sources:
          - secret:
              name: cilium-clustermesh
              optional: true
          - secret:
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
              name: clustermesh-apiserver-remote-cert
              optional: true
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              - key: ca.crt
                path: client-ca.crt
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
---
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
spec:
  controller: cilium.io/ingress-controller
